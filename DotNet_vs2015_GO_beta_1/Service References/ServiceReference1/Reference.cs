//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNet_vs2015_GO_beta_1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.EamilServiceSoap")]
    public interface EamilServiceSoap {
        
        // CODEGEN: 命名空间 http://tempuri.org/ 的元素名称 sendfrom 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailMsg", ReplyAction="*")]
        DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse SendMailMsg(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendMailMsg", ReplyAction="*")]
        System.Threading.Tasks.Task<DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse> SendMailMsgAsync(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendMailMsgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendMailMsg", Namespace="http://tempuri.org/", Order=0)]
        public DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequestBody Body;
        
        public SendMailMsgRequest() {
        }
        
        public SendMailMsgRequest(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class SendMailMsgRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sendfrom;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string sendfrompwd;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sendto;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string subject;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string body;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string smtpserver;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int smtpport;
        
        public SendMailMsgRequestBody() {
        }
        
        public SendMailMsgRequestBody(string sendfrom, string sendfrompwd, string sendto, string subject, string body, string smtpserver, int smtpport) {
            this.sendfrom = sendfrom;
            this.sendfrompwd = sendfrompwd;
            this.sendto = sendto;
            this.subject = subject;
            this.body = body;
            this.smtpserver = smtpserver;
            this.smtpport = smtpport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SendMailMsgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SendMailMsgResponse", Namespace="http://tempuri.org/", Order=0)]
        public DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponseBody Body;
        
        public SendMailMsgResponse() {
        }
        
        public SendMailMsgResponse(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SendMailMsgResponseBody {
        
        public SendMailMsgResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EamilServiceSoapChannel : DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EamilServiceSoapClient : System.ServiceModel.ClientBase<DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap>, DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap {
        
        public EamilServiceSoapClient() {
        }
        
        public EamilServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EamilServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EamilServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EamilServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap.SendMailMsg(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest request) {
            return base.Channel.SendMailMsg(request);
        }
        
        public void SendMailMsg(string sendfrom, string sendfrompwd, string sendto, string subject, string body, string smtpserver, int smtpport) {
            DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest inValue = new DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest();
            inValue.Body = new DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequestBody();
            inValue.Body.sendfrom = sendfrom;
            inValue.Body.sendfrompwd = sendfrompwd;
            inValue.Body.sendto = sendto;
            inValue.Body.subject = subject;
            inValue.Body.body = body;
            inValue.Body.smtpserver = smtpserver;
            inValue.Body.smtpport = smtpport;
            DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse retVal = ((DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap)(this)).SendMailMsg(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse> DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap.SendMailMsgAsync(DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest request) {
            return base.Channel.SendMailMsgAsync(request);
        }
        
        public System.Threading.Tasks.Task<DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgResponse> SendMailMsgAsync(string sendfrom, string sendfrompwd, string sendto, string subject, string body, string smtpserver, int smtpport) {
            DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest inValue = new DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequest();
            inValue.Body = new DotNet_vs2015_GO_beta_1.ServiceReference1.SendMailMsgRequestBody();
            inValue.Body.sendfrom = sendfrom;
            inValue.Body.sendfrompwd = sendfrompwd;
            inValue.Body.sendto = sendto;
            inValue.Body.subject = subject;
            inValue.Body.body = body;
            inValue.Body.smtpserver = smtpserver;
            inValue.Body.smtpport = smtpport;
            return ((DotNet_vs2015_GO_beta_1.ServiceReference1.EamilServiceSoap)(this)).SendMailMsgAsync(inValue);
        }
    }
}
